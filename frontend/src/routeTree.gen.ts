/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutMintRecordsRouteImport } from './routes/_layout/mint-records'
import { Route as LayoutGalleryRouteImport } from './routes/_layout/gallery'
import { Route as LayoutAuthStudioIndexRouteImport } from './routes/_layout/_auth.studio.index'
import { Route as LayoutAuthStudioForgeRouteImport } from './routes/_layout/_auth.studio.forge'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutMintRecordsRoute = LayoutMintRecordsRouteImport.update({
  id: '/mint-records',
  path: '/mint-records',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutGalleryRoute = LayoutGalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAuthStudioIndexRoute = LayoutAuthStudioIndexRouteImport.update({
  id: '/_auth/studio/',
  path: '/studio/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAuthStudioForgeRoute = LayoutAuthStudioForgeRouteImport.update({
  id: '/_auth/studio/forge',
  path: '/studio/forge',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/gallery': typeof LayoutGalleryRoute
  '/mint-records': typeof LayoutMintRecordsRoute
  '/studio/forge': typeof LayoutAuthStudioForgeRoute
  '/studio': typeof LayoutAuthStudioIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/gallery': typeof LayoutGalleryRoute
  '/mint-records': typeof LayoutMintRecordsRoute
  '/studio/forge': typeof LayoutAuthStudioForgeRoute
  '/studio': typeof LayoutAuthStudioIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/gallery': typeof LayoutGalleryRoute
  '/_layout/mint-records': typeof LayoutMintRecordsRoute
  '/_layout/_auth/studio/forge': typeof LayoutAuthStudioForgeRoute
  '/_layout/_auth/studio/': typeof LayoutAuthStudioIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/gallery' | '/mint-records' | '/studio/forge' | '/studio'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/gallery' | '/mint-records' | '/studio/forge' | '/studio'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/gallery'
    | '/_layout/mint-records'
    | '/_layout/_auth/studio/forge'
    | '/_layout/_auth/studio/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/mint-records': {
      id: '/_layout/mint-records'
      path: '/mint-records'
      fullPath: '/mint-records'
      preLoaderRoute: typeof LayoutMintRecordsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/gallery': {
      id: '/_layout/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof LayoutGalleryRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/_auth/studio/': {
      id: '/_layout/_auth/studio/'
      path: '/studio'
      fullPath: '/studio'
      preLoaderRoute: typeof LayoutAuthStudioIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/_auth/studio/forge': {
      id: '/_layout/_auth/studio/forge'
      path: '/studio/forge'
      fullPath: '/studio/forge'
      preLoaderRoute: typeof LayoutAuthStudioForgeRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutGalleryRoute: typeof LayoutGalleryRoute
  LayoutMintRecordsRoute: typeof LayoutMintRecordsRoute
  LayoutAuthStudioForgeRoute: typeof LayoutAuthStudioForgeRoute
  LayoutAuthStudioIndexRoute: typeof LayoutAuthStudioIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutGalleryRoute: LayoutGalleryRoute,
  LayoutMintRecordsRoute: LayoutMintRecordsRoute,
  LayoutAuthStudioForgeRoute: LayoutAuthStudioForgeRoute,
  LayoutAuthStudioIndexRoute: LayoutAuthStudioIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
